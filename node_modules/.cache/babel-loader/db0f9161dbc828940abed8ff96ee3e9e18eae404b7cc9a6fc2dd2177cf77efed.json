{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DivyanshMishra\\\\Downloads\\\\q6_scaffold\\\\q6_scaffold\\\\src\\\\components\\\\ExpenseForm\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport styles from \"./ExpenseForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = _ref => {\n  _s();\n  let {\n    addExpense,\n    editExpense,\n    setEditExpense,\n    updateExpense\n  } = _ref;\n  const expenseTextInput = useRef();\n  const expenseAmountInput = useRef();\n\n  // Use the useEffect hook here, to check if an expense is to be updated\n  // If yes, the autofill the form values with the text and amount of the expense\n\n  useEffect(() => {\n    if (!editExpense) return;\n    expenseTextInput.current.value = editExpense.text;\n    expenseAmountInput.current.value = editExpense.amount;\n  }, [editExpense]);\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const expenseText = expenseTextInput.current.value;\n    const expenseAmount = expenseAmountInput.current.value;\n    if (parseInt(expenseAmount) === 0) {\n      return;\n    }\n    if (editExpense) {\n      const expense = {\n        text: expenseText,\n        amount: expenseAmount,\n        id: editExpense.id\n      };\n      updateExpense(expense);\n      clearInput();\n      setEditExpense(null);\n      return;\n    } else {\n      const expense = {\n        text: expenseText,\n        amount: expenseAmount,\n        id: new Date().getTime()\n      };\n      addExpense(expense);\n      clearInput();\n      return;\n    }\n\n    // Logic to update expense here\n  };\n  const clearInput = () => {\n    expenseAmountInput.current.value = \"\";\n    expenseTextInput.current.value = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", editExpense ? \"Edit\" : \"Add new\", \" transaction \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"expenseText\",\n      children: \"Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"expenseText\",\n      className: styles.input,\n      type: \"text\",\n      placeholder: \"Enter text...\",\n      ref: expenseTextInput,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"expenseAmount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"(negative - expense,positive-income)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      id: \"expenseAmount\",\n      type: \"number\",\n      placeholder: \"Enter amount...\",\n      ref: expenseAmountInput,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submitBtn,\n      children: [editExpense ? \"Edit\" : \"Add\", \" Transaction\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"UdG5ZS4XLgcSBZQIdUl66OXB3RE=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useEffect","useRef","styles","jsxDEV","_jsxDEV","ExpenseForm","_ref","_s","addExpense","editExpense","setEditExpense","updateExpense","expenseTextInput","expenseAmountInput","current","value","text","amount","onSubmitHandler","e","preventDefault","expenseText","expenseAmount","parseInt","expense","id","clearInput","Date","getTime","className","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","input","type","placeholder","ref","required","submitBtn","_c","$RefreshReg$"],"sources":["C:/Users/DivyanshMishra/Downloads/q6_scaffold/q6_scaffold/src/components/ExpenseForm/ExpenseForm.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"./ExpenseForm.module.css\";\r\n\r\nconst ExpenseForm = ({ addExpense, editExpense, setEditExpense, updateExpense }) => {\r\n  const expenseTextInput = useRef();\r\n  const expenseAmountInput = useRef();\r\n\r\n  // Use the useEffect hook here, to check if an expense is to be updated\r\n  // If yes, the autofill the form values with the text and amount of the expense\r\n\r\n  useEffect(() => {\r\n    if(!editExpense) return;\r\n    expenseTextInput.current.value = editExpense.text;\r\n    expenseAmountInput.current.value = editExpense.amount;\r\n  }, [editExpense]);\r\n\r\n\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseText = expenseTextInput.current.value;\r\n    const expenseAmount = expenseAmountInput.current.value;\r\n    if (parseInt(expenseAmount) === 0) {\r\n      return;\r\n    }\r\n\r\n    if(editExpense) {\r\n      const expense = {\r\n        text: expenseText,\r\n        amount: expenseAmount,\r\n        id: editExpense.id\r\n      };\r\n      updateExpense(expense);\r\n      clearInput();\r\n      setEditExpense(null);\r\n      return;\r\n\r\n    } else {\r\n      const expense = {\r\n        text: expenseText,\r\n        amount: expenseAmount,\r\n        id: new Date().getTime()\r\n      };\r\n      addExpense(expense);\r\n      clearInput();\r\n      return;\r\n    }\r\n    \r\n\r\n    // Logic to update expense here\r\n\r\n\r\n  };\r\n\r\n  const clearInput = () => {\r\n    expenseAmountInput.current.value = \"\";\r\n    expenseTextInput.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={onSubmitHandler}>\r\n      {/* Change text to Edit Transaction if an expense is to be updated */}\r\n      <h3> { editExpense ? \"Edit\" : \"Add new\" } transaction </h3>\r\n      <label htmlFor=\"expenseText\">Text</label>\r\n      <input\r\n        id=\"expenseText\"\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"Enter text...\"\r\n        ref={expenseTextInput}\r\n        required\r\n      />\r\n      <div>\r\n        <label htmlFor=\"expenseAmount\">Amount</label>\r\n        <div>(negative - expense,positive-income)</div>\r\n      </div>\r\n      <input\r\n        className={styles.input}\r\n        id=\"expenseAmount\"\r\n        type=\"number\"\r\n        placeholder=\"Enter amount...\"\r\n        ref={expenseAmountInput}\r\n        required\r\n      />\r\n      <button className={styles.submitBtn}>\r\n        {/* Change text to Edit Transaction if an expense is to be updated */}\r\n        {editExpense ? \"Edit\" : \"Add\"} Transaction\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}